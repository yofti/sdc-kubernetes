apiVersion: v1
kind: Service
metadata:
  name: sdc-cassandra
  namespace: sysdigcloud
  labels:
    app: sysdigcloud
    role: cassandra
spec:
  clusterIP: None
  ports:
    - port: 9042
      name: cql
    - port: 9160
      name: thrift
    - port: 7000
      name: intra-node
    - port: 7001
      name: tls-intra-node
    - port: 7199
      name: jmx
  selector:
    app: sysdigcloud
    role: cassandra
---
apiVersion: "apps/v1beta1"
kind: StatefulSet
metadata:
  name: sdc-cassandra
  namespace: sysdigcloud
  labels:
    app: sysdigcloud
    role: cassandra
spec:
  serviceName: sdc-cassandra
  replicas: 3
  template:
    metadata:
      labels:
        app: sysdigcloud
        role: cassandra
    spec:
      containers:
      - name: cassandra
        #image: gcr.io/google-samples/cassandra:v12
        #image: quay.io/sysdig/cassandra:2.1.15.0
        image: yofti/cassandra:2.2.11
        #image: launcher.gcr.io/google/cassandra2
        imagePullPolicy: Always
        ports:
        - containerPort: 7000
          name: intra-node
        - containerPort: 7001
          name: tls-intra-node
        - containerPort: 7199
          name: jmx
        - containerPort: 9042
          name: cql
        - containerPort: 9160
          name: thrift
        resources:
          requests:
           cpu: "2000m"
           memory: 8Gi
          limits:
           cpu: "6000m"
           memory: 18Gi
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "nodetool drain"]
        env:
          - name: CASSANDRA_SEEDS
            value: "sdc-cassandra-0.sdc-cassandra.sysdigcloud.svc.cluster.local"
          - name: CASSANDRA_SERVICE
            value: sdc-cassandra
          #- name: CASSANDRA_SEED_PROVIDER
          #  value: "io.k8s.cassandra.KubernetesSeedProvider"
          - name: CASSANDRA_CLUSTER_NAME
            value: "sysdigcloud"
          - name: CASSANDRA_ENDPOINT_SNITCH
            value: "GoogleCloudSnitch"
          - name: CASSANDRA_START_RPC
            value: "true"
          - name: JVM_EXTRA_OPTS
            valueFrom:
                configMapKeyRef:
                  name: sysdigcloud-config
                  key: cassandra.jvm.options
          - name: CASSANDRA_SECURE
            valueFrom:
                configMapKeyRef:
                  name: sysdigcloud-config
                  key: cassandra.secure
          - name: CASSANDRA_SSL
            valueFrom:
                configMapKeyRef:
                  name: sysdigcloud-config
                  key: cassandra.ssl.enabled
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - nodetool status | egrep $(hostname -i) | egrep UN 
          initialDelaySeconds: 15
          timeoutSeconds: 5
        # These volume mounts are persistent. They are like inline claims,
        # but not exactly because the names need to match exactly one of
        # the stateful pod volumes.
        volumeMounts:
        - name: data
          mountPath: /var/lib/cassandra

      imagePullSecrets:
      - name: sysdigcloud-pull-secret
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.
  # do not use these in production until ssd GCEPersistentDisk or other ssd pd
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Gi
      storageClassName: gce-pd
